x-logging: &default-logging
  driver: loki
  options:
    loki-url: "http://localhost:3100/api/prom/push"
    no-file: "false"
    keep-file: "true"
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'


version: "3.9"

volumes:
  dbdata6:
  redis-insight:
  mongo-data:
  tempo-data:
  grafana-data:
  redis-data: 

services:
  mongodb:
    image: mongo:latest
    environment:
      - MONGO_OPTIONS=--wiredTigerCacheSizeGB 2
      - MONGO_OPTIONS=--enableCompression
      - PUID=1000
      - PGID=1000
    volumes:
      - dbdata6:/data/db
    ports:
      - "27017:27017"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 3g
          cpus: "2.0"
    logging: *default-logging          

  redis:
    image: redis:7
    command: ["redis-server", "/etc/redis/redis.conf", "--requirepass", "redis1234"]
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/etc/redis/redis.conf
      - redis-data:/data
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
        reservations:
          cpus: "0.5"
          memory: 512M
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    logging: *default-logging

  redis-insight:
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    volumes:
      - redis-insight:/data
    depends_on:
      - redis
    deploy:
      replicas: 1     
    logging: *default-logging      

  app-granian:
    image: tiagobarbano/myframegranian:0.1.3
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: ingress
    depends_on:
      - grafana
      - prometheus
      - tempo
    environment:
      - PROMETHEUS_MULTIPROC_DIR=metrics
      - APP_NAME=MY_FRAME_GRANIAN
      - LOGGER_LEVEL=info
      - ENDPOINT_OTEL=http://tempo:4317
      - FLAG_LOCAL=false
      - ENABLE_TRACING=false
      - ENABLE_METRICS=false
      - ENABLE_LOGGER=false
      - ENABLE_SWAGGER=false
      - WORKER=4
      - redis_url=redis://:redis1234@redis:6379/1
      - mongo_url=mongodb://mongodb:27017
      - granian_runtime_mode=st
      - enable_trace_ratio_based=true
      - port_app=8000
    deploy:
      replicas: 1
      resources:
        limits:
          memory: "1g"
          cpus: "1"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    logging: *default-logging

  # webflux-app:
  #   image: tiagobarbano/demo_java:latest
  #   ports:
  #     - target: 8080
  #       published: 8080
  #       protocol: tcp
  #       mode: ingress
  #   depends_on:
  #     - grafana
  #     - prometheus
  #     - tempo
  #   environment:
  #     - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/cotador
  #     - SPRING_DATA_REDIS_HOST=redis
  #     - SPRING_DATA_REDIS_PORT=6379
  #     - SPRING_DATA_REDIS_PASSWORD=redis1234
  #     - OTEL_PROPAGATORS=tracecontext,baggage
  #     - OTEL_TRACES_SAMPLER=traceidratio
  #     - OTEL_TRACES_SAMPLER_ARG=0.1      
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 500M
  #         cpus: "1"
  #   # ulimits:
  #   #   nofile:
  #   #     soft: 65535
  #   #     hard: 65535
  #   logging: *default-logging          

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    deploy:
      replicas: 1

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml    
    deploy:
      replicas: 1
    logging: *default-logging      

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    deploy:
      replicas: 1

  prometheus:
    image: prom/prometheus:latest
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./alerts.yml:/etc/prometheus/rules/alerts.yml:ro
    ports:
      - "9090:9090"
    extra_hosts: [ "host.docker.internal:host-gateway" ]
    
    deploy:
      replicas: 1

  redis_exporter:
    image: oliver006/redis_exporter:v1.54.0
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: redis://:redis1234@redis:6379
    depends_on:
      - redis
      
    deploy:
      replicas: 1

  mongodb_exporter:
    image: percona/mongodb_exporter:0.40
    command:
      - '--mongodb.uri=mongodb://mongodb:27017'
      - '--collector.diagnosticdata'
      - '--collector.replicasetstatus'
      - '--collector.dbstats'
      - '--collector.dbstatsfreestorage'
      - '--collector.topmetrics'
      - '--collector.currentopmetrics'
      - '--collector.indexstats'
      - '--collector.collstats'
      - '--collector.profile'
    ports:
      - "9216:9216"
    depends_on:
      - mongodb
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        
    logging: *default-logging

  tempo:
    image: grafana/tempo:2.3.1
    command: ["--config.file=/etc/tempo/tempo.yaml"]
    volumes:
      - tempo-data:/var/tempo
      - ./tempo.yaml:/etc/tempo/tempo.yaml:ro
      - ./overrides.yaml:/etc/tempo/overrides.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"
      - "3200:3200"
    tmpfs:
      - /var/tempo:exec,nosuid,size=500m
    deploy:
      replicas: 1
    logging: *default-logging

  rabbit-mq:
    image: rabbitmq:3.12.10-management
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      replicas: 1
    logging: *default-logging

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    deploy:
      mode: global   # 1 por nó do Swarm
      resources:
        limits:
          cpus: "0.5"
          memory: 200M
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8081:8080"
    logging: *default-logging

  node-exporter:
    image: prom/node-exporter:latest
    deploy:
      mode: global   # 1 por nó do Swarm
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    logging: *default-logging

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    logging: *default-logging